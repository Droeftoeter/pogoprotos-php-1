<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos/Enums/PokemonId.proto
 */


namespace POGOProtos\Enums;

/**
 * Protobuf enum : POGOProtos.Enums.PokemonId
 */
class PokemonId extends \Protobuf\Enum
{

    /**
     * MISSINGNO = 0
     */
    const MISSINGNO_VALUE = 0;

    /**
     * BULBASAUR = 1
     */
    const BULBASAUR_VALUE = 1;

    /**
     * IVYSAUR = 2
     */
    const IVYSAUR_VALUE = 2;

    /**
     * VENUSAUR = 3
     */
    const VENUSAUR_VALUE = 3;

    /**
     * CHARMANDER = 4
     */
    const CHARMANDER_VALUE = 4;

    /**
     * CHARMELEON = 5
     */
    const CHARMELEON_VALUE = 5;

    /**
     * CHARIZARD = 6
     */
    const CHARIZARD_VALUE = 6;

    /**
     * SQUIRTLE = 7
     */
    const SQUIRTLE_VALUE = 7;

    /**
     * WARTORTLE = 8
     */
    const WARTORTLE_VALUE = 8;

    /**
     * BLASTOISE = 9
     */
    const BLASTOISE_VALUE = 9;

    /**
     * CATERPIE = 10
     */
    const CATERPIE_VALUE = 10;

    /**
     * METAPOD = 11
     */
    const METAPOD_VALUE = 11;

    /**
     * BUTTERFREE = 12
     */
    const BUTTERFREE_VALUE = 12;

    /**
     * WEEDLE = 13
     */
    const WEEDLE_VALUE = 13;

    /**
     * KAKUNA = 14
     */
    const KAKUNA_VALUE = 14;

    /**
     * BEEDRILL = 15
     */
    const BEEDRILL_VALUE = 15;

    /**
     * PIDGEY = 16
     */
    const PIDGEY_VALUE = 16;

    /**
     * PIDGEOTTO = 17
     */
    const PIDGEOTTO_VALUE = 17;

    /**
     * PIDGEOT = 18
     */
    const PIDGEOT_VALUE = 18;

    /**
     * RATTATA = 19
     */
    const RATTATA_VALUE = 19;

    /**
     * RATICATE = 20
     */
    const RATICATE_VALUE = 20;

    /**
     * SPEAROW = 21
     */
    const SPEAROW_VALUE = 21;

    /**
     * FEAROW = 22
     */
    const FEAROW_VALUE = 22;

    /**
     * EKANS = 23
     */
    const EKANS_VALUE = 23;

    /**
     * ARBOK = 24
     */
    const ARBOK_VALUE = 24;

    /**
     * PIKACHU = 25
     */
    const PIKACHU_VALUE = 25;

    /**
     * RAICHU = 26
     */
    const RAICHU_VALUE = 26;

    /**
     * SANDSHREW = 27
     */
    const SANDSHREW_VALUE = 27;

    /**
     * SANDSLASH = 28
     */
    const SANDSLASH_VALUE = 28;

    /**
     * NIDORAN_FEMALE = 29
     */
    const NIDORAN_FEMALE_VALUE = 29;

    /**
     * NIDORINA = 30
     */
    const NIDORINA_VALUE = 30;

    /**
     * NIDOQUEEN = 31
     */
    const NIDOQUEEN_VALUE = 31;

    /**
     * NIDORAN_MALE = 32
     */
    const NIDORAN_MALE_VALUE = 32;

    /**
     * NIDORINO = 33
     */
    const NIDORINO_VALUE = 33;

    /**
     * NIDOKING = 34
     */
    const NIDOKING_VALUE = 34;

    /**
     * CLEFAIRY = 35
     */
    const CLEFAIRY_VALUE = 35;

    /**
     * CLEFABLE = 36
     */
    const CLEFABLE_VALUE = 36;

    /**
     * VULPIX = 37
     */
    const VULPIX_VALUE = 37;

    /**
     * NINETALES = 38
     */
    const NINETALES_VALUE = 38;

    /**
     * JIGGLYPUFF = 39
     */
    const JIGGLYPUFF_VALUE = 39;

    /**
     * WIGGLYTUFF = 40
     */
    const WIGGLYTUFF_VALUE = 40;

    /**
     * ZUBAT = 41
     */
    const ZUBAT_VALUE = 41;

    /**
     * GOLBAT = 42
     */
    const GOLBAT_VALUE = 42;

    /**
     * ODDISH = 43
     */
    const ODDISH_VALUE = 43;

    /**
     * GLOOM = 44
     */
    const GLOOM_VALUE = 44;

    /**
     * VILEPLUME = 45
     */
    const VILEPLUME_VALUE = 45;

    /**
     * PARAS = 46
     */
    const PARAS_VALUE = 46;

    /**
     * PARASECT = 47
     */
    const PARASECT_VALUE = 47;

    /**
     * VENONAT = 48
     */
    const VENONAT_VALUE = 48;

    /**
     * VENOMOTH = 49
     */
    const VENOMOTH_VALUE = 49;

    /**
     * DIGLETT = 50
     */
    const DIGLETT_VALUE = 50;

    /**
     * DUGTRIO = 51
     */
    const DUGTRIO_VALUE = 51;

    /**
     * MEOWTH = 52
     */
    const MEOWTH_VALUE = 52;

    /**
     * PERSIAN = 53
     */
    const PERSIAN_VALUE = 53;

    /**
     * PSYDUCK = 54
     */
    const PSYDUCK_VALUE = 54;

    /**
     * GOLDUCK = 55
     */
    const GOLDUCK_VALUE = 55;

    /**
     * MANKEY = 56
     */
    const MANKEY_VALUE = 56;

    /**
     * PRIMEAPE = 57
     */
    const PRIMEAPE_VALUE = 57;

    /**
     * GROWLITHE = 58
     */
    const GROWLITHE_VALUE = 58;

    /**
     * ARCANINE = 59
     */
    const ARCANINE_VALUE = 59;

    /**
     * POLIWAG = 60
     */
    const POLIWAG_VALUE = 60;

    /**
     * POLIWHIRL = 61
     */
    const POLIWHIRL_VALUE = 61;

    /**
     * POLIWRATH = 62
     */
    const POLIWRATH_VALUE = 62;

    /**
     * ABRA = 63
     */
    const ABRA_VALUE = 63;

    /**
     * KADABRA = 64
     */
    const KADABRA_VALUE = 64;

    /**
     * ALAKAZAM = 65
     */
    const ALAKAZAM_VALUE = 65;

    /**
     * MACHOP = 66
     */
    const MACHOP_VALUE = 66;

    /**
     * MACHOKE = 67
     */
    const MACHOKE_VALUE = 67;

    /**
     * MACHAMP = 68
     */
    const MACHAMP_VALUE = 68;

    /**
     * BELLSPROUT = 69
     */
    const BELLSPROUT_VALUE = 69;

    /**
     * WEEPINBELL = 70
     */
    const WEEPINBELL_VALUE = 70;

    /**
     * VICTREEBEL = 71
     */
    const VICTREEBEL_VALUE = 71;

    /**
     * TENTACOOL = 72
     */
    const TENTACOOL_VALUE = 72;

    /**
     * TENTACRUEL = 73
     */
    const TENTACRUEL_VALUE = 73;

    /**
     * GEODUDE = 74
     */
    const GEODUDE_VALUE = 74;

    /**
     * GRAVELER = 75
     */
    const GRAVELER_VALUE = 75;

    /**
     * GOLEM = 76
     */
    const GOLEM_VALUE = 76;

    /**
     * PONYTA = 77
     */
    const PONYTA_VALUE = 77;

    /**
     * RAPIDASH = 78
     */
    const RAPIDASH_VALUE = 78;

    /**
     * SLOWPOKE = 79
     */
    const SLOWPOKE_VALUE = 79;

    /**
     * SLOWBRO = 80
     */
    const SLOWBRO_VALUE = 80;

    /**
     * MAGNEMITE = 81
     */
    const MAGNEMITE_VALUE = 81;

    /**
     * MAGNETON = 82
     */
    const MAGNETON_VALUE = 82;

    /**
     * FARFETCHD = 83
     */
    const FARFETCHD_VALUE = 83;

    /**
     * DODUO = 84
     */
    const DODUO_VALUE = 84;

    /**
     * DODRIO = 85
     */
    const DODRIO_VALUE = 85;

    /**
     * SEEL = 86
     */
    const SEEL_VALUE = 86;

    /**
     * DEWGONG = 87
     */
    const DEWGONG_VALUE = 87;

    /**
     * GRIMER = 88
     */
    const GRIMER_VALUE = 88;

    /**
     * MUK = 89
     */
    const MUK_VALUE = 89;

    /**
     * SHELLDER = 90
     */
    const SHELLDER_VALUE = 90;

    /**
     * CLOYSTER = 91
     */
    const CLOYSTER_VALUE = 91;

    /**
     * GASTLY = 92
     */
    const GASTLY_VALUE = 92;

    /**
     * HAUNTER = 93
     */
    const HAUNTER_VALUE = 93;

    /**
     * GENGAR = 94
     */
    const GENGAR_VALUE = 94;

    /**
     * ONIX = 95
     */
    const ONIX_VALUE = 95;

    /**
     * DROWZEE = 96
     */
    const DROWZEE_VALUE = 96;

    /**
     * HYPNO = 97
     */
    const HYPNO_VALUE = 97;

    /**
     * KRABBY = 98
     */
    const KRABBY_VALUE = 98;

    /**
     * KINGLER = 99
     */
    const KINGLER_VALUE = 99;

    /**
     * VOLTORB = 100
     */
    const VOLTORB_VALUE = 100;

    /**
     * ELECTRODE = 101
     */
    const ELECTRODE_VALUE = 101;

    /**
     * EXEGGCUTE = 102
     */
    const EXEGGCUTE_VALUE = 102;

    /**
     * EXEGGUTOR = 103
     */
    const EXEGGUTOR_VALUE = 103;

    /**
     * CUBONE = 104
     */
    const CUBONE_VALUE = 104;

    /**
     * MAROWAK = 105
     */
    const MAROWAK_VALUE = 105;

    /**
     * HITMONLEE = 106
     */
    const HITMONLEE_VALUE = 106;

    /**
     * HITMONCHAN = 107
     */
    const HITMONCHAN_VALUE = 107;

    /**
     * LICKITUNG = 108
     */
    const LICKITUNG_VALUE = 108;

    /**
     * KOFFING = 109
     */
    const KOFFING_VALUE = 109;

    /**
     * WEEZING = 110
     */
    const WEEZING_VALUE = 110;

    /**
     * RHYHORN = 111
     */
    const RHYHORN_VALUE = 111;

    /**
     * RHYDON = 112
     */
    const RHYDON_VALUE = 112;

    /**
     * CHANSEY = 113
     */
    const CHANSEY_VALUE = 113;

    /**
     * TANGELA = 114
     */
    const TANGELA_VALUE = 114;

    /**
     * KANGASKHAN = 115
     */
    const KANGASKHAN_VALUE = 115;

    /**
     * HORSEA = 116
     */
    const HORSEA_VALUE = 116;

    /**
     * SEADRA = 117
     */
    const SEADRA_VALUE = 117;

    /**
     * GOLDEEN = 118
     */
    const GOLDEEN_VALUE = 118;

    /**
     * SEAKING = 119
     */
    const SEAKING_VALUE = 119;

    /**
     * STARYU = 120
     */
    const STARYU_VALUE = 120;

    /**
     * STARMIE = 121
     */
    const STARMIE_VALUE = 121;

    /**
     * MR_MIME = 122
     */
    const MR_MIME_VALUE = 122;

    /**
     * SCYTHER = 123
     */
    const SCYTHER_VALUE = 123;

    /**
     * JYNX = 124
     */
    const JYNX_VALUE = 124;

    /**
     * ELECTABUZZ = 125
     */
    const ELECTABUZZ_VALUE = 125;

    /**
     * MAGMAR = 126
     */
    const MAGMAR_VALUE = 126;

    /**
     * PINSIR = 127
     */
    const PINSIR_VALUE = 127;

    /**
     * TAUROS = 128
     */
    const TAUROS_VALUE = 128;

    /**
     * MAGIKARP = 129
     */
    const MAGIKARP_VALUE = 129;

    /**
     * GYARADOS = 130
     */
    const GYARADOS_VALUE = 130;

    /**
     * LAPRAS = 131
     */
    const LAPRAS_VALUE = 131;

    /**
     * DITTO = 132
     */
    const DITTO_VALUE = 132;

    /**
     * EEVEE = 133
     */
    const EEVEE_VALUE = 133;

    /**
     * VAPOREON = 134
     */
    const VAPOREON_VALUE = 134;

    /**
     * JOLTEON = 135
     */
    const JOLTEON_VALUE = 135;

    /**
     * FLAREON = 136
     */
    const FLAREON_VALUE = 136;

    /**
     * PORYGON = 137
     */
    const PORYGON_VALUE = 137;

    /**
     * OMANYTE = 138
     */
    const OMANYTE_VALUE = 138;

    /**
     * OMASTAR = 139
     */
    const OMASTAR_VALUE = 139;

    /**
     * KABUTO = 140
     */
    const KABUTO_VALUE = 140;

    /**
     * KABUTOPS = 141
     */
    const KABUTOPS_VALUE = 141;

    /**
     * AERODACTYL = 142
     */
    const AERODACTYL_VALUE = 142;

    /**
     * SNORLAX = 143
     */
    const SNORLAX_VALUE = 143;

    /**
     * ARTICUNO = 144
     */
    const ARTICUNO_VALUE = 144;

    /**
     * ZAPDOS = 145
     */
    const ZAPDOS_VALUE = 145;

    /**
     * MOLTRES = 146
     */
    const MOLTRES_VALUE = 146;

    /**
     * DRATINI = 147
     */
    const DRATINI_VALUE = 147;

    /**
     * DRAGONAIR = 148
     */
    const DRAGONAIR_VALUE = 148;

    /**
     * DRAGONITE = 149
     */
    const DRAGONITE_VALUE = 149;

    /**
     * MEWTWO = 150
     */
    const MEWTWO_VALUE = 150;

    /**
     * MEW = 151
     */
    const MEW_VALUE = 151;

    /**
     * CHIKORITA = 152
     */
    const CHIKORITA_VALUE = 152;

    /**
     * BAYLEEF = 153
     */
    const BAYLEEF_VALUE = 153;

    /**
     * MEGANIUM = 154
     */
    const MEGANIUM_VALUE = 154;

    /**
     * CYNDAQUIL = 155
     */
    const CYNDAQUIL_VALUE = 155;

    /**
     * QUILAVA = 156
     */
    const QUILAVA_VALUE = 156;

    /**
     * TYPHLOSION = 157
     */
    const TYPHLOSION_VALUE = 157;

    /**
     * TOTODILE = 158
     */
    const TOTODILE_VALUE = 158;

    /**
     * CROCONAW = 159
     */
    const CROCONAW_VALUE = 159;

    /**
     * FERALIGATR = 160
     */
    const FERALIGATR_VALUE = 160;

    /**
     * SENTRET = 161
     */
    const SENTRET_VALUE = 161;

    /**
     * FURRET = 162
     */
    const FURRET_VALUE = 162;

    /**
     * HOOTHOOT = 163
     */
    const HOOTHOOT_VALUE = 163;

    /**
     * NOCTOWL = 164
     */
    const NOCTOWL_VALUE = 164;

    /**
     * LEDYBA = 165
     */
    const LEDYBA_VALUE = 165;

    /**
     * LEDIAN = 166
     */
    const LEDIAN_VALUE = 166;

    /**
     * SPINARAK = 167
     */
    const SPINARAK_VALUE = 167;

    /**
     * ARIADOS = 168
     */
    const ARIADOS_VALUE = 168;

    /**
     * CROBAT = 169
     */
    const CROBAT_VALUE = 169;

    /**
     * CHINCHOU = 170
     */
    const CHINCHOU_VALUE = 170;

    /**
     * LANTURN = 171
     */
    const LANTURN_VALUE = 171;

    /**
     * PICHU = 172
     */
    const PICHU_VALUE = 172;

    /**
     * CLEFFA = 173
     */
    const CLEFFA_VALUE = 173;

    /**
     * IGGLYBUFF = 174
     */
    const IGGLYBUFF_VALUE = 174;

    /**
     * TOGEPI = 175
     */
    const TOGEPI_VALUE = 175;

    /**
     * TOGETIC = 176
     */
    const TOGETIC_VALUE = 176;

    /**
     * NATU = 177
     */
    const NATU_VALUE = 177;

    /**
     * XATU = 178
     */
    const XATU_VALUE = 178;

    /**
     * MAREEP = 179
     */
    const MAREEP_VALUE = 179;

    /**
     * FLAAFFY = 180
     */
    const FLAAFFY_VALUE = 180;

    /**
     * AMPHAROS = 181
     */
    const AMPHAROS_VALUE = 181;

    /**
     * BELLOSSOM = 182
     */
    const BELLOSSOM_VALUE = 182;

    /**
     * MARILL = 183
     */
    const MARILL_VALUE = 183;

    /**
     * AZUMARILL = 184
     */
    const AZUMARILL_VALUE = 184;

    /**
     * SUDOWOODO = 185
     */
    const SUDOWOODO_VALUE = 185;

    /**
     * POLITOED = 186
     */
    const POLITOED_VALUE = 186;

    /**
     * HOPPIP = 187
     */
    const HOPPIP_VALUE = 187;

    /**
     * SKIPLOOM = 188
     */
    const SKIPLOOM_VALUE = 188;

    /**
     * JUMPLUFF = 189
     */
    const JUMPLUFF_VALUE = 189;

    /**
     * AIPOM = 190
     */
    const AIPOM_VALUE = 190;

    /**
     * SUNKERN = 191
     */
    const SUNKERN_VALUE = 191;

    /**
     * SUNFLORA = 192
     */
    const SUNFLORA_VALUE = 192;

    /**
     * YANMA = 193
     */
    const YANMA_VALUE = 193;

    /**
     * WOOPER = 194
     */
    const WOOPER_VALUE = 194;

    /**
     * QUAGSIRE = 195
     */
    const QUAGSIRE_VALUE = 195;

    /**
     * ESPEON = 196
     */
    const ESPEON_VALUE = 196;

    /**
     * UMBREON = 197
     */
    const UMBREON_VALUE = 197;

    /**
     * MURKROW = 198
     */
    const MURKROW_VALUE = 198;

    /**
     * SLOWKING = 199
     */
    const SLOWKING_VALUE = 199;

    /**
     * MISDREAVUS = 200
     */
    const MISDREAVUS_VALUE = 200;

    /**
     * UNOWN = 201
     */
    const UNOWN_VALUE = 201;

    /**
     * WOBBUFFET = 202
     */
    const WOBBUFFET_VALUE = 202;

    /**
     * GIRAFARIG = 203
     */
    const GIRAFARIG_VALUE = 203;

    /**
     * PINECO = 204
     */
    const PINECO_VALUE = 204;

    /**
     * FORRETRESS = 205
     */
    const FORRETRESS_VALUE = 205;

    /**
     * DUNSPARCE = 206
     */
    const DUNSPARCE_VALUE = 206;

    /**
     * GLIGAR = 207
     */
    const GLIGAR_VALUE = 207;

    /**
     * STEELIX = 208
     */
    const STEELIX_VALUE = 208;

    /**
     * SNUBBULL = 209
     */
    const SNUBBULL_VALUE = 209;

    /**
     * GRANBULL = 210
     */
    const GRANBULL_VALUE = 210;

    /**
     * QWILFISH = 211
     */
    const QWILFISH_VALUE = 211;

    /**
     * SCIZOR = 212
     */
    const SCIZOR_VALUE = 212;

    /**
     * SHUCKLE = 213
     */
    const SHUCKLE_VALUE = 213;

    /**
     * HERACROSS = 214
     */
    const HERACROSS_VALUE = 214;

    /**
     * SNEASEL = 215
     */
    const SNEASEL_VALUE = 215;

    /**
     * TEDDIURSA = 216
     */
    const TEDDIURSA_VALUE = 216;

    /**
     * URSARING = 217
     */
    const URSARING_VALUE = 217;

    /**
     * SLUGMA = 218
     */
    const SLUGMA_VALUE = 218;

    /**
     * MAGCARGO = 219
     */
    const MAGCARGO_VALUE = 219;

    /**
     * SWINUB = 220
     */
    const SWINUB_VALUE = 220;

    /**
     * PILOSWINE = 221
     */
    const PILOSWINE_VALUE = 221;

    /**
     * CORSOLA = 222
     */
    const CORSOLA_VALUE = 222;

    /**
     * REMORAID = 223
     */
    const REMORAID_VALUE = 223;

    /**
     * OCTILLERY = 224
     */
    const OCTILLERY_VALUE = 224;

    /**
     * DELIBIRD = 225
     */
    const DELIBIRD_VALUE = 225;

    /**
     * MANTINE = 226
     */
    const MANTINE_VALUE = 226;

    /**
     * SKARMORY = 227
     */
    const SKARMORY_VALUE = 227;

    /**
     * HOUNDOUR = 228
     */
    const HOUNDOUR_VALUE = 228;

    /**
     * HOUNDOOM = 229
     */
    const HOUNDOOM_VALUE = 229;

    /**
     * KINGDRA = 230
     */
    const KINGDRA_VALUE = 230;

    /**
     * PHANPY = 231
     */
    const PHANPY_VALUE = 231;

    /**
     * DONPHAN = 232
     */
    const DONPHAN_VALUE = 232;

    /**
     * PORYGON2 = 233
     */
    const PORYGON2_VALUE = 233;

    /**
     * STANTLER = 234
     */
    const STANTLER_VALUE = 234;

    /**
     * SMEARGLE = 235
     */
    const SMEARGLE_VALUE = 235;

    /**
     * TYROGUE = 236
     */
    const TYROGUE_VALUE = 236;

    /**
     * HITMONTOP = 237
     */
    const HITMONTOP_VALUE = 237;

    /**
     * SMOOCHUM = 238
     */
    const SMOOCHUM_VALUE = 238;

    /**
     * ELEKID = 239
     */
    const ELEKID_VALUE = 239;

    /**
     * MAGBY = 240
     */
    const MAGBY_VALUE = 240;

    /**
     * MILTANK = 241
     */
    const MILTANK_VALUE = 241;

    /**
     * BLISSEY = 242
     */
    const BLISSEY_VALUE = 242;

    /**
     * RAIKOU = 243
     */
    const RAIKOU_VALUE = 243;

    /**
     * ENTEI = 244
     */
    const ENTEI_VALUE = 244;

    /**
     * SUICUNE = 245
     */
    const SUICUNE_VALUE = 245;

    /**
     * LARVITAR = 246
     */
    const LARVITAR_VALUE = 246;

    /**
     * PUPITAR = 247
     */
    const PUPITAR_VALUE = 247;

    /**
     * TYRANITAR = 248
     */
    const TYRANITAR_VALUE = 248;

    /**
     * LUGIA = 249
     */
    const LUGIA_VALUE = 249;

    /**
     * HO_OH = 250
     */
    const HO_OH_VALUE = 250;

    /**
     * CELEBI = 251
     */
    const CELEBI_VALUE = 251;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MISSINGNO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $BULBASAUR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $IVYSAUR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $VENUSAUR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CHARMANDER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CHARMELEON = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CHARIZARD = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SQUIRTLE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $WARTORTLE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $BLASTOISE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CATERPIE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $METAPOD = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $BUTTERFREE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $WEEDLE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $KAKUNA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $BEEDRILL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PIDGEY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PIDGEOTTO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PIDGEOT = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $RATTATA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $RATICATE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SPEAROW = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $FEAROW = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $EKANS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ARBOK = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PIKACHU = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $RAICHU = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SANDSHREW = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SANDSLASH = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $NIDORAN_FEMALE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $NIDORINA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $NIDOQUEEN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $NIDORAN_MALE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $NIDORINO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $NIDOKING = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CLEFAIRY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CLEFABLE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $VULPIX = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $NINETALES = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $JIGGLYPUFF = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $WIGGLYTUFF = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ZUBAT = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GOLBAT = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ODDISH = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GLOOM = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $VILEPLUME = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PARAS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PARASECT = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $VENONAT = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $VENOMOTH = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DIGLETT = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DUGTRIO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MEOWTH = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PERSIAN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PSYDUCK = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GOLDUCK = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MANKEY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PRIMEAPE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GROWLITHE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ARCANINE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $POLIWAG = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $POLIWHIRL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $POLIWRATH = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ABRA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $KADABRA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ALAKAZAM = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MACHOP = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MACHOKE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MACHAMP = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $BELLSPROUT = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $WEEPINBELL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $VICTREEBEL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TENTACOOL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TENTACRUEL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GEODUDE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GRAVELER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GOLEM = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PONYTA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $RAPIDASH = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SLOWPOKE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SLOWBRO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MAGNEMITE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MAGNETON = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $FARFETCHD = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DODUO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DODRIO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SEEL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DEWGONG = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GRIMER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MUK = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SHELLDER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CLOYSTER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GASTLY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HAUNTER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GENGAR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ONIX = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DROWZEE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HYPNO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $KRABBY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $KINGLER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $VOLTORB = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ELECTRODE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $EXEGGCUTE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $EXEGGUTOR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CUBONE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MAROWAK = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HITMONLEE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HITMONCHAN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $LICKITUNG = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $KOFFING = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $WEEZING = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $RHYHORN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $RHYDON = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CHANSEY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TANGELA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $KANGASKHAN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HORSEA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SEADRA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GOLDEEN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SEAKING = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $STARYU = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $STARMIE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MR_MIME = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SCYTHER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $JYNX = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ELECTABUZZ = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MAGMAR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PINSIR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TAUROS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MAGIKARP = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GYARADOS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $LAPRAS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DITTO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $EEVEE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $VAPOREON = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $JOLTEON = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $FLAREON = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PORYGON = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $OMANYTE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $OMASTAR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $KABUTO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $KABUTOPS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $AERODACTYL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SNORLAX = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ARTICUNO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ZAPDOS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MOLTRES = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DRATINI = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DRAGONAIR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DRAGONITE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MEWTWO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MEW = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CHIKORITA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $BAYLEEF = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MEGANIUM = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CYNDAQUIL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $QUILAVA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TYPHLOSION = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TOTODILE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CROCONAW = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $FERALIGATR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SENTRET = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $FURRET = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HOOTHOOT = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $NOCTOWL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $LEDYBA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $LEDIAN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SPINARAK = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ARIADOS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CROBAT = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CHINCHOU = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $LANTURN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PICHU = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CLEFFA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $IGGLYBUFF = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TOGEPI = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TOGETIC = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $NATU = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $XATU = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MAREEP = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $FLAAFFY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $AMPHAROS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $BELLOSSOM = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MARILL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $AZUMARILL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SUDOWOODO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $POLITOED = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HOPPIP = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SKIPLOOM = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $JUMPLUFF = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $AIPOM = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SUNKERN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SUNFLORA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $YANMA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $WOOPER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $QUAGSIRE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ESPEON = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $UMBREON = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MURKROW = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SLOWKING = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MISDREAVUS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $UNOWN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $WOBBUFFET = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GIRAFARIG = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PINECO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $FORRETRESS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DUNSPARCE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GLIGAR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $STEELIX = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SNUBBULL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $GRANBULL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $QWILFISH = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SCIZOR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SHUCKLE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HERACROSS = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SNEASEL = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TEDDIURSA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $URSARING = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SLUGMA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MAGCARGO = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SWINUB = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PILOSWINE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CORSOLA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $REMORAID = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $OCTILLERY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DELIBIRD = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MANTINE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SKARMORY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HOUNDOUR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HOUNDOOM = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $KINGDRA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PHANPY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $DONPHAN = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PORYGON2 = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $STANTLER = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SMEARGLE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TYROGUE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HITMONTOP = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SMOOCHUM = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ELEKID = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MAGBY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $MILTANK = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $BLISSEY = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $RAIKOU = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $ENTEI = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $SUICUNE = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $LARVITAR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $PUPITAR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $TYRANITAR = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $LUGIA = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $HO_OH = null;

    /**
     * @var \POGOProtos\Enums\PokemonId
     */
    protected static $CELEBI = null;

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MISSINGNO()
    {
        if (self::$MISSINGNO !== null) {
            return self::$MISSINGNO;
        }

        return self::$MISSINGNO = new self('MISSINGNO', self::MISSINGNO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function BULBASAUR()
    {
        if (self::$BULBASAUR !== null) {
            return self::$BULBASAUR;
        }

        return self::$BULBASAUR = new self('BULBASAUR', self::BULBASAUR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function IVYSAUR()
    {
        if (self::$IVYSAUR !== null) {
            return self::$IVYSAUR;
        }

        return self::$IVYSAUR = new self('IVYSAUR', self::IVYSAUR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function VENUSAUR()
    {
        if (self::$VENUSAUR !== null) {
            return self::$VENUSAUR;
        }

        return self::$VENUSAUR = new self('VENUSAUR', self::VENUSAUR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CHARMANDER()
    {
        if (self::$CHARMANDER !== null) {
            return self::$CHARMANDER;
        }

        return self::$CHARMANDER = new self('CHARMANDER', self::CHARMANDER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CHARMELEON()
    {
        if (self::$CHARMELEON !== null) {
            return self::$CHARMELEON;
        }

        return self::$CHARMELEON = new self('CHARMELEON', self::CHARMELEON_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CHARIZARD()
    {
        if (self::$CHARIZARD !== null) {
            return self::$CHARIZARD;
        }

        return self::$CHARIZARD = new self('CHARIZARD', self::CHARIZARD_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SQUIRTLE()
    {
        if (self::$SQUIRTLE !== null) {
            return self::$SQUIRTLE;
        }

        return self::$SQUIRTLE = new self('SQUIRTLE', self::SQUIRTLE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function WARTORTLE()
    {
        if (self::$WARTORTLE !== null) {
            return self::$WARTORTLE;
        }

        return self::$WARTORTLE = new self('WARTORTLE', self::WARTORTLE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function BLASTOISE()
    {
        if (self::$BLASTOISE !== null) {
            return self::$BLASTOISE;
        }

        return self::$BLASTOISE = new self('BLASTOISE', self::BLASTOISE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CATERPIE()
    {
        if (self::$CATERPIE !== null) {
            return self::$CATERPIE;
        }

        return self::$CATERPIE = new self('CATERPIE', self::CATERPIE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function METAPOD()
    {
        if (self::$METAPOD !== null) {
            return self::$METAPOD;
        }

        return self::$METAPOD = new self('METAPOD', self::METAPOD_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function BUTTERFREE()
    {
        if (self::$BUTTERFREE !== null) {
            return self::$BUTTERFREE;
        }

        return self::$BUTTERFREE = new self('BUTTERFREE', self::BUTTERFREE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function WEEDLE()
    {
        if (self::$WEEDLE !== null) {
            return self::$WEEDLE;
        }

        return self::$WEEDLE = new self('WEEDLE', self::WEEDLE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function KAKUNA()
    {
        if (self::$KAKUNA !== null) {
            return self::$KAKUNA;
        }

        return self::$KAKUNA = new self('KAKUNA', self::KAKUNA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function BEEDRILL()
    {
        if (self::$BEEDRILL !== null) {
            return self::$BEEDRILL;
        }

        return self::$BEEDRILL = new self('BEEDRILL', self::BEEDRILL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PIDGEY()
    {
        if (self::$PIDGEY !== null) {
            return self::$PIDGEY;
        }

        return self::$PIDGEY = new self('PIDGEY', self::PIDGEY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PIDGEOTTO()
    {
        if (self::$PIDGEOTTO !== null) {
            return self::$PIDGEOTTO;
        }

        return self::$PIDGEOTTO = new self('PIDGEOTTO', self::PIDGEOTTO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PIDGEOT()
    {
        if (self::$PIDGEOT !== null) {
            return self::$PIDGEOT;
        }

        return self::$PIDGEOT = new self('PIDGEOT', self::PIDGEOT_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function RATTATA()
    {
        if (self::$RATTATA !== null) {
            return self::$RATTATA;
        }

        return self::$RATTATA = new self('RATTATA', self::RATTATA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function RATICATE()
    {
        if (self::$RATICATE !== null) {
            return self::$RATICATE;
        }

        return self::$RATICATE = new self('RATICATE', self::RATICATE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SPEAROW()
    {
        if (self::$SPEAROW !== null) {
            return self::$SPEAROW;
        }

        return self::$SPEAROW = new self('SPEAROW', self::SPEAROW_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function FEAROW()
    {
        if (self::$FEAROW !== null) {
            return self::$FEAROW;
        }

        return self::$FEAROW = new self('FEAROW', self::FEAROW_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function EKANS()
    {
        if (self::$EKANS !== null) {
            return self::$EKANS;
        }

        return self::$EKANS = new self('EKANS', self::EKANS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ARBOK()
    {
        if (self::$ARBOK !== null) {
            return self::$ARBOK;
        }

        return self::$ARBOK = new self('ARBOK', self::ARBOK_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PIKACHU()
    {
        if (self::$PIKACHU !== null) {
            return self::$PIKACHU;
        }

        return self::$PIKACHU = new self('PIKACHU', self::PIKACHU_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function RAICHU()
    {
        if (self::$RAICHU !== null) {
            return self::$RAICHU;
        }

        return self::$RAICHU = new self('RAICHU', self::RAICHU_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SANDSHREW()
    {
        if (self::$SANDSHREW !== null) {
            return self::$SANDSHREW;
        }

        return self::$SANDSHREW = new self('SANDSHREW', self::SANDSHREW_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SANDSLASH()
    {
        if (self::$SANDSLASH !== null) {
            return self::$SANDSLASH;
        }

        return self::$SANDSLASH = new self('SANDSLASH', self::SANDSLASH_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function NIDORAN_FEMALE()
    {
        if (self::$NIDORAN_FEMALE !== null) {
            return self::$NIDORAN_FEMALE;
        }

        return self::$NIDORAN_FEMALE = new self('NIDORAN_FEMALE', self::NIDORAN_FEMALE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function NIDORINA()
    {
        if (self::$NIDORINA !== null) {
            return self::$NIDORINA;
        }

        return self::$NIDORINA = new self('NIDORINA', self::NIDORINA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function NIDOQUEEN()
    {
        if (self::$NIDOQUEEN !== null) {
            return self::$NIDOQUEEN;
        }

        return self::$NIDOQUEEN = new self('NIDOQUEEN', self::NIDOQUEEN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function NIDORAN_MALE()
    {
        if (self::$NIDORAN_MALE !== null) {
            return self::$NIDORAN_MALE;
        }

        return self::$NIDORAN_MALE = new self('NIDORAN_MALE', self::NIDORAN_MALE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function NIDORINO()
    {
        if (self::$NIDORINO !== null) {
            return self::$NIDORINO;
        }

        return self::$NIDORINO = new self('NIDORINO', self::NIDORINO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function NIDOKING()
    {
        if (self::$NIDOKING !== null) {
            return self::$NIDOKING;
        }

        return self::$NIDOKING = new self('NIDOKING', self::NIDOKING_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CLEFAIRY()
    {
        if (self::$CLEFAIRY !== null) {
            return self::$CLEFAIRY;
        }

        return self::$CLEFAIRY = new self('CLEFAIRY', self::CLEFAIRY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CLEFABLE()
    {
        if (self::$CLEFABLE !== null) {
            return self::$CLEFABLE;
        }

        return self::$CLEFABLE = new self('CLEFABLE', self::CLEFABLE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function VULPIX()
    {
        if (self::$VULPIX !== null) {
            return self::$VULPIX;
        }

        return self::$VULPIX = new self('VULPIX', self::VULPIX_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function NINETALES()
    {
        if (self::$NINETALES !== null) {
            return self::$NINETALES;
        }

        return self::$NINETALES = new self('NINETALES', self::NINETALES_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function JIGGLYPUFF()
    {
        if (self::$JIGGLYPUFF !== null) {
            return self::$JIGGLYPUFF;
        }

        return self::$JIGGLYPUFF = new self('JIGGLYPUFF', self::JIGGLYPUFF_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function WIGGLYTUFF()
    {
        if (self::$WIGGLYTUFF !== null) {
            return self::$WIGGLYTUFF;
        }

        return self::$WIGGLYTUFF = new self('WIGGLYTUFF', self::WIGGLYTUFF_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ZUBAT()
    {
        if (self::$ZUBAT !== null) {
            return self::$ZUBAT;
        }

        return self::$ZUBAT = new self('ZUBAT', self::ZUBAT_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GOLBAT()
    {
        if (self::$GOLBAT !== null) {
            return self::$GOLBAT;
        }

        return self::$GOLBAT = new self('GOLBAT', self::GOLBAT_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ODDISH()
    {
        if (self::$ODDISH !== null) {
            return self::$ODDISH;
        }

        return self::$ODDISH = new self('ODDISH', self::ODDISH_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GLOOM()
    {
        if (self::$GLOOM !== null) {
            return self::$GLOOM;
        }

        return self::$GLOOM = new self('GLOOM', self::GLOOM_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function VILEPLUME()
    {
        if (self::$VILEPLUME !== null) {
            return self::$VILEPLUME;
        }

        return self::$VILEPLUME = new self('VILEPLUME', self::VILEPLUME_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PARAS()
    {
        if (self::$PARAS !== null) {
            return self::$PARAS;
        }

        return self::$PARAS = new self('PARAS', self::PARAS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PARASECT()
    {
        if (self::$PARASECT !== null) {
            return self::$PARASECT;
        }

        return self::$PARASECT = new self('PARASECT', self::PARASECT_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function VENONAT()
    {
        if (self::$VENONAT !== null) {
            return self::$VENONAT;
        }

        return self::$VENONAT = new self('VENONAT', self::VENONAT_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function VENOMOTH()
    {
        if (self::$VENOMOTH !== null) {
            return self::$VENOMOTH;
        }

        return self::$VENOMOTH = new self('VENOMOTH', self::VENOMOTH_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DIGLETT()
    {
        if (self::$DIGLETT !== null) {
            return self::$DIGLETT;
        }

        return self::$DIGLETT = new self('DIGLETT', self::DIGLETT_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DUGTRIO()
    {
        if (self::$DUGTRIO !== null) {
            return self::$DUGTRIO;
        }

        return self::$DUGTRIO = new self('DUGTRIO', self::DUGTRIO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MEOWTH()
    {
        if (self::$MEOWTH !== null) {
            return self::$MEOWTH;
        }

        return self::$MEOWTH = new self('MEOWTH', self::MEOWTH_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PERSIAN()
    {
        if (self::$PERSIAN !== null) {
            return self::$PERSIAN;
        }

        return self::$PERSIAN = new self('PERSIAN', self::PERSIAN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PSYDUCK()
    {
        if (self::$PSYDUCK !== null) {
            return self::$PSYDUCK;
        }

        return self::$PSYDUCK = new self('PSYDUCK', self::PSYDUCK_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GOLDUCK()
    {
        if (self::$GOLDUCK !== null) {
            return self::$GOLDUCK;
        }

        return self::$GOLDUCK = new self('GOLDUCK', self::GOLDUCK_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MANKEY()
    {
        if (self::$MANKEY !== null) {
            return self::$MANKEY;
        }

        return self::$MANKEY = new self('MANKEY', self::MANKEY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PRIMEAPE()
    {
        if (self::$PRIMEAPE !== null) {
            return self::$PRIMEAPE;
        }

        return self::$PRIMEAPE = new self('PRIMEAPE', self::PRIMEAPE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GROWLITHE()
    {
        if (self::$GROWLITHE !== null) {
            return self::$GROWLITHE;
        }

        return self::$GROWLITHE = new self('GROWLITHE', self::GROWLITHE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ARCANINE()
    {
        if (self::$ARCANINE !== null) {
            return self::$ARCANINE;
        }

        return self::$ARCANINE = new self('ARCANINE', self::ARCANINE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function POLIWAG()
    {
        if (self::$POLIWAG !== null) {
            return self::$POLIWAG;
        }

        return self::$POLIWAG = new self('POLIWAG', self::POLIWAG_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function POLIWHIRL()
    {
        if (self::$POLIWHIRL !== null) {
            return self::$POLIWHIRL;
        }

        return self::$POLIWHIRL = new self('POLIWHIRL', self::POLIWHIRL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function POLIWRATH()
    {
        if (self::$POLIWRATH !== null) {
            return self::$POLIWRATH;
        }

        return self::$POLIWRATH = new self('POLIWRATH', self::POLIWRATH_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ABRA()
    {
        if (self::$ABRA !== null) {
            return self::$ABRA;
        }

        return self::$ABRA = new self('ABRA', self::ABRA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function KADABRA()
    {
        if (self::$KADABRA !== null) {
            return self::$KADABRA;
        }

        return self::$KADABRA = new self('KADABRA', self::KADABRA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ALAKAZAM()
    {
        if (self::$ALAKAZAM !== null) {
            return self::$ALAKAZAM;
        }

        return self::$ALAKAZAM = new self('ALAKAZAM', self::ALAKAZAM_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MACHOP()
    {
        if (self::$MACHOP !== null) {
            return self::$MACHOP;
        }

        return self::$MACHOP = new self('MACHOP', self::MACHOP_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MACHOKE()
    {
        if (self::$MACHOKE !== null) {
            return self::$MACHOKE;
        }

        return self::$MACHOKE = new self('MACHOKE', self::MACHOKE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MACHAMP()
    {
        if (self::$MACHAMP !== null) {
            return self::$MACHAMP;
        }

        return self::$MACHAMP = new self('MACHAMP', self::MACHAMP_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function BELLSPROUT()
    {
        if (self::$BELLSPROUT !== null) {
            return self::$BELLSPROUT;
        }

        return self::$BELLSPROUT = new self('BELLSPROUT', self::BELLSPROUT_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function WEEPINBELL()
    {
        if (self::$WEEPINBELL !== null) {
            return self::$WEEPINBELL;
        }

        return self::$WEEPINBELL = new self('WEEPINBELL', self::WEEPINBELL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function VICTREEBEL()
    {
        if (self::$VICTREEBEL !== null) {
            return self::$VICTREEBEL;
        }

        return self::$VICTREEBEL = new self('VICTREEBEL', self::VICTREEBEL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TENTACOOL()
    {
        if (self::$TENTACOOL !== null) {
            return self::$TENTACOOL;
        }

        return self::$TENTACOOL = new self('TENTACOOL', self::TENTACOOL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TENTACRUEL()
    {
        if (self::$TENTACRUEL !== null) {
            return self::$TENTACRUEL;
        }

        return self::$TENTACRUEL = new self('TENTACRUEL', self::TENTACRUEL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GEODUDE()
    {
        if (self::$GEODUDE !== null) {
            return self::$GEODUDE;
        }

        return self::$GEODUDE = new self('GEODUDE', self::GEODUDE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GRAVELER()
    {
        if (self::$GRAVELER !== null) {
            return self::$GRAVELER;
        }

        return self::$GRAVELER = new self('GRAVELER', self::GRAVELER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GOLEM()
    {
        if (self::$GOLEM !== null) {
            return self::$GOLEM;
        }

        return self::$GOLEM = new self('GOLEM', self::GOLEM_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PONYTA()
    {
        if (self::$PONYTA !== null) {
            return self::$PONYTA;
        }

        return self::$PONYTA = new self('PONYTA', self::PONYTA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function RAPIDASH()
    {
        if (self::$RAPIDASH !== null) {
            return self::$RAPIDASH;
        }

        return self::$RAPIDASH = new self('RAPIDASH', self::RAPIDASH_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SLOWPOKE()
    {
        if (self::$SLOWPOKE !== null) {
            return self::$SLOWPOKE;
        }

        return self::$SLOWPOKE = new self('SLOWPOKE', self::SLOWPOKE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SLOWBRO()
    {
        if (self::$SLOWBRO !== null) {
            return self::$SLOWBRO;
        }

        return self::$SLOWBRO = new self('SLOWBRO', self::SLOWBRO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MAGNEMITE()
    {
        if (self::$MAGNEMITE !== null) {
            return self::$MAGNEMITE;
        }

        return self::$MAGNEMITE = new self('MAGNEMITE', self::MAGNEMITE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MAGNETON()
    {
        if (self::$MAGNETON !== null) {
            return self::$MAGNETON;
        }

        return self::$MAGNETON = new self('MAGNETON', self::MAGNETON_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function FARFETCHD()
    {
        if (self::$FARFETCHD !== null) {
            return self::$FARFETCHD;
        }

        return self::$FARFETCHD = new self('FARFETCHD', self::FARFETCHD_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DODUO()
    {
        if (self::$DODUO !== null) {
            return self::$DODUO;
        }

        return self::$DODUO = new self('DODUO', self::DODUO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DODRIO()
    {
        if (self::$DODRIO !== null) {
            return self::$DODRIO;
        }

        return self::$DODRIO = new self('DODRIO', self::DODRIO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SEEL()
    {
        if (self::$SEEL !== null) {
            return self::$SEEL;
        }

        return self::$SEEL = new self('SEEL', self::SEEL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DEWGONG()
    {
        if (self::$DEWGONG !== null) {
            return self::$DEWGONG;
        }

        return self::$DEWGONG = new self('DEWGONG', self::DEWGONG_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GRIMER()
    {
        if (self::$GRIMER !== null) {
            return self::$GRIMER;
        }

        return self::$GRIMER = new self('GRIMER', self::GRIMER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MUK()
    {
        if (self::$MUK !== null) {
            return self::$MUK;
        }

        return self::$MUK = new self('MUK', self::MUK_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SHELLDER()
    {
        if (self::$SHELLDER !== null) {
            return self::$SHELLDER;
        }

        return self::$SHELLDER = new self('SHELLDER', self::SHELLDER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CLOYSTER()
    {
        if (self::$CLOYSTER !== null) {
            return self::$CLOYSTER;
        }

        return self::$CLOYSTER = new self('CLOYSTER', self::CLOYSTER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GASTLY()
    {
        if (self::$GASTLY !== null) {
            return self::$GASTLY;
        }

        return self::$GASTLY = new self('GASTLY', self::GASTLY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HAUNTER()
    {
        if (self::$HAUNTER !== null) {
            return self::$HAUNTER;
        }

        return self::$HAUNTER = new self('HAUNTER', self::HAUNTER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GENGAR()
    {
        if (self::$GENGAR !== null) {
            return self::$GENGAR;
        }

        return self::$GENGAR = new self('GENGAR', self::GENGAR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ONIX()
    {
        if (self::$ONIX !== null) {
            return self::$ONIX;
        }

        return self::$ONIX = new self('ONIX', self::ONIX_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DROWZEE()
    {
        if (self::$DROWZEE !== null) {
            return self::$DROWZEE;
        }

        return self::$DROWZEE = new self('DROWZEE', self::DROWZEE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HYPNO()
    {
        if (self::$HYPNO !== null) {
            return self::$HYPNO;
        }

        return self::$HYPNO = new self('HYPNO', self::HYPNO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function KRABBY()
    {
        if (self::$KRABBY !== null) {
            return self::$KRABBY;
        }

        return self::$KRABBY = new self('KRABBY', self::KRABBY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function KINGLER()
    {
        if (self::$KINGLER !== null) {
            return self::$KINGLER;
        }

        return self::$KINGLER = new self('KINGLER', self::KINGLER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function VOLTORB()
    {
        if (self::$VOLTORB !== null) {
            return self::$VOLTORB;
        }

        return self::$VOLTORB = new self('VOLTORB', self::VOLTORB_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ELECTRODE()
    {
        if (self::$ELECTRODE !== null) {
            return self::$ELECTRODE;
        }

        return self::$ELECTRODE = new self('ELECTRODE', self::ELECTRODE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function EXEGGCUTE()
    {
        if (self::$EXEGGCUTE !== null) {
            return self::$EXEGGCUTE;
        }

        return self::$EXEGGCUTE = new self('EXEGGCUTE', self::EXEGGCUTE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function EXEGGUTOR()
    {
        if (self::$EXEGGUTOR !== null) {
            return self::$EXEGGUTOR;
        }

        return self::$EXEGGUTOR = new self('EXEGGUTOR', self::EXEGGUTOR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CUBONE()
    {
        if (self::$CUBONE !== null) {
            return self::$CUBONE;
        }

        return self::$CUBONE = new self('CUBONE', self::CUBONE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MAROWAK()
    {
        if (self::$MAROWAK !== null) {
            return self::$MAROWAK;
        }

        return self::$MAROWAK = new self('MAROWAK', self::MAROWAK_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HITMONLEE()
    {
        if (self::$HITMONLEE !== null) {
            return self::$HITMONLEE;
        }

        return self::$HITMONLEE = new self('HITMONLEE', self::HITMONLEE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HITMONCHAN()
    {
        if (self::$HITMONCHAN !== null) {
            return self::$HITMONCHAN;
        }

        return self::$HITMONCHAN = new self('HITMONCHAN', self::HITMONCHAN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function LICKITUNG()
    {
        if (self::$LICKITUNG !== null) {
            return self::$LICKITUNG;
        }

        return self::$LICKITUNG = new self('LICKITUNG', self::LICKITUNG_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function KOFFING()
    {
        if (self::$KOFFING !== null) {
            return self::$KOFFING;
        }

        return self::$KOFFING = new self('KOFFING', self::KOFFING_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function WEEZING()
    {
        if (self::$WEEZING !== null) {
            return self::$WEEZING;
        }

        return self::$WEEZING = new self('WEEZING', self::WEEZING_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function RHYHORN()
    {
        if (self::$RHYHORN !== null) {
            return self::$RHYHORN;
        }

        return self::$RHYHORN = new self('RHYHORN', self::RHYHORN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function RHYDON()
    {
        if (self::$RHYDON !== null) {
            return self::$RHYDON;
        }

        return self::$RHYDON = new self('RHYDON', self::RHYDON_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CHANSEY()
    {
        if (self::$CHANSEY !== null) {
            return self::$CHANSEY;
        }

        return self::$CHANSEY = new self('CHANSEY', self::CHANSEY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TANGELA()
    {
        if (self::$TANGELA !== null) {
            return self::$TANGELA;
        }

        return self::$TANGELA = new self('TANGELA', self::TANGELA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function KANGASKHAN()
    {
        if (self::$KANGASKHAN !== null) {
            return self::$KANGASKHAN;
        }

        return self::$KANGASKHAN = new self('KANGASKHAN', self::KANGASKHAN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HORSEA()
    {
        if (self::$HORSEA !== null) {
            return self::$HORSEA;
        }

        return self::$HORSEA = new self('HORSEA', self::HORSEA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SEADRA()
    {
        if (self::$SEADRA !== null) {
            return self::$SEADRA;
        }

        return self::$SEADRA = new self('SEADRA', self::SEADRA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GOLDEEN()
    {
        if (self::$GOLDEEN !== null) {
            return self::$GOLDEEN;
        }

        return self::$GOLDEEN = new self('GOLDEEN', self::GOLDEEN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SEAKING()
    {
        if (self::$SEAKING !== null) {
            return self::$SEAKING;
        }

        return self::$SEAKING = new self('SEAKING', self::SEAKING_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function STARYU()
    {
        if (self::$STARYU !== null) {
            return self::$STARYU;
        }

        return self::$STARYU = new self('STARYU', self::STARYU_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function STARMIE()
    {
        if (self::$STARMIE !== null) {
            return self::$STARMIE;
        }

        return self::$STARMIE = new self('STARMIE', self::STARMIE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MR_MIME()
    {
        if (self::$MR_MIME !== null) {
            return self::$MR_MIME;
        }

        return self::$MR_MIME = new self('MR_MIME', self::MR_MIME_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SCYTHER()
    {
        if (self::$SCYTHER !== null) {
            return self::$SCYTHER;
        }

        return self::$SCYTHER = new self('SCYTHER', self::SCYTHER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function JYNX()
    {
        if (self::$JYNX !== null) {
            return self::$JYNX;
        }

        return self::$JYNX = new self('JYNX', self::JYNX_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ELECTABUZZ()
    {
        if (self::$ELECTABUZZ !== null) {
            return self::$ELECTABUZZ;
        }

        return self::$ELECTABUZZ = new self('ELECTABUZZ', self::ELECTABUZZ_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MAGMAR()
    {
        if (self::$MAGMAR !== null) {
            return self::$MAGMAR;
        }

        return self::$MAGMAR = new self('MAGMAR', self::MAGMAR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PINSIR()
    {
        if (self::$PINSIR !== null) {
            return self::$PINSIR;
        }

        return self::$PINSIR = new self('PINSIR', self::PINSIR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TAUROS()
    {
        if (self::$TAUROS !== null) {
            return self::$TAUROS;
        }

        return self::$TAUROS = new self('TAUROS', self::TAUROS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MAGIKARP()
    {
        if (self::$MAGIKARP !== null) {
            return self::$MAGIKARP;
        }

        return self::$MAGIKARP = new self('MAGIKARP', self::MAGIKARP_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GYARADOS()
    {
        if (self::$GYARADOS !== null) {
            return self::$GYARADOS;
        }

        return self::$GYARADOS = new self('GYARADOS', self::GYARADOS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function LAPRAS()
    {
        if (self::$LAPRAS !== null) {
            return self::$LAPRAS;
        }

        return self::$LAPRAS = new self('LAPRAS', self::LAPRAS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DITTO()
    {
        if (self::$DITTO !== null) {
            return self::$DITTO;
        }

        return self::$DITTO = new self('DITTO', self::DITTO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function EEVEE()
    {
        if (self::$EEVEE !== null) {
            return self::$EEVEE;
        }

        return self::$EEVEE = new self('EEVEE', self::EEVEE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function VAPOREON()
    {
        if (self::$VAPOREON !== null) {
            return self::$VAPOREON;
        }

        return self::$VAPOREON = new self('VAPOREON', self::VAPOREON_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function JOLTEON()
    {
        if (self::$JOLTEON !== null) {
            return self::$JOLTEON;
        }

        return self::$JOLTEON = new self('JOLTEON', self::JOLTEON_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function FLAREON()
    {
        if (self::$FLAREON !== null) {
            return self::$FLAREON;
        }

        return self::$FLAREON = new self('FLAREON', self::FLAREON_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PORYGON()
    {
        if (self::$PORYGON !== null) {
            return self::$PORYGON;
        }

        return self::$PORYGON = new self('PORYGON', self::PORYGON_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function OMANYTE()
    {
        if (self::$OMANYTE !== null) {
            return self::$OMANYTE;
        }

        return self::$OMANYTE = new self('OMANYTE', self::OMANYTE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function OMASTAR()
    {
        if (self::$OMASTAR !== null) {
            return self::$OMASTAR;
        }

        return self::$OMASTAR = new self('OMASTAR', self::OMASTAR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function KABUTO()
    {
        if (self::$KABUTO !== null) {
            return self::$KABUTO;
        }

        return self::$KABUTO = new self('KABUTO', self::KABUTO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function KABUTOPS()
    {
        if (self::$KABUTOPS !== null) {
            return self::$KABUTOPS;
        }

        return self::$KABUTOPS = new self('KABUTOPS', self::KABUTOPS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function AERODACTYL()
    {
        if (self::$AERODACTYL !== null) {
            return self::$AERODACTYL;
        }

        return self::$AERODACTYL = new self('AERODACTYL', self::AERODACTYL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SNORLAX()
    {
        if (self::$SNORLAX !== null) {
            return self::$SNORLAX;
        }

        return self::$SNORLAX = new self('SNORLAX', self::SNORLAX_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ARTICUNO()
    {
        if (self::$ARTICUNO !== null) {
            return self::$ARTICUNO;
        }

        return self::$ARTICUNO = new self('ARTICUNO', self::ARTICUNO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ZAPDOS()
    {
        if (self::$ZAPDOS !== null) {
            return self::$ZAPDOS;
        }

        return self::$ZAPDOS = new self('ZAPDOS', self::ZAPDOS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MOLTRES()
    {
        if (self::$MOLTRES !== null) {
            return self::$MOLTRES;
        }

        return self::$MOLTRES = new self('MOLTRES', self::MOLTRES_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DRATINI()
    {
        if (self::$DRATINI !== null) {
            return self::$DRATINI;
        }

        return self::$DRATINI = new self('DRATINI', self::DRATINI_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DRAGONAIR()
    {
        if (self::$DRAGONAIR !== null) {
            return self::$DRAGONAIR;
        }

        return self::$DRAGONAIR = new self('DRAGONAIR', self::DRAGONAIR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DRAGONITE()
    {
        if (self::$DRAGONITE !== null) {
            return self::$DRAGONITE;
        }

        return self::$DRAGONITE = new self('DRAGONITE', self::DRAGONITE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MEWTWO()
    {
        if (self::$MEWTWO !== null) {
            return self::$MEWTWO;
        }

        return self::$MEWTWO = new self('MEWTWO', self::MEWTWO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MEW()
    {
        if (self::$MEW !== null) {
            return self::$MEW;
        }

        return self::$MEW = new self('MEW', self::MEW_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CHIKORITA()
    {
        if (self::$CHIKORITA !== null) {
            return self::$CHIKORITA;
        }

        return self::$CHIKORITA = new self('CHIKORITA', self::CHIKORITA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function BAYLEEF()
    {
        if (self::$BAYLEEF !== null) {
            return self::$BAYLEEF;
        }

        return self::$BAYLEEF = new self('BAYLEEF', self::BAYLEEF_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MEGANIUM()
    {
        if (self::$MEGANIUM !== null) {
            return self::$MEGANIUM;
        }

        return self::$MEGANIUM = new self('MEGANIUM', self::MEGANIUM_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CYNDAQUIL()
    {
        if (self::$CYNDAQUIL !== null) {
            return self::$CYNDAQUIL;
        }

        return self::$CYNDAQUIL = new self('CYNDAQUIL', self::CYNDAQUIL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function QUILAVA()
    {
        if (self::$QUILAVA !== null) {
            return self::$QUILAVA;
        }

        return self::$QUILAVA = new self('QUILAVA', self::QUILAVA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TYPHLOSION()
    {
        if (self::$TYPHLOSION !== null) {
            return self::$TYPHLOSION;
        }

        return self::$TYPHLOSION = new self('TYPHLOSION', self::TYPHLOSION_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TOTODILE()
    {
        if (self::$TOTODILE !== null) {
            return self::$TOTODILE;
        }

        return self::$TOTODILE = new self('TOTODILE', self::TOTODILE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CROCONAW()
    {
        if (self::$CROCONAW !== null) {
            return self::$CROCONAW;
        }

        return self::$CROCONAW = new self('CROCONAW', self::CROCONAW_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function FERALIGATR()
    {
        if (self::$FERALIGATR !== null) {
            return self::$FERALIGATR;
        }

        return self::$FERALIGATR = new self('FERALIGATR', self::FERALIGATR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SENTRET()
    {
        if (self::$SENTRET !== null) {
            return self::$SENTRET;
        }

        return self::$SENTRET = new self('SENTRET', self::SENTRET_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function FURRET()
    {
        if (self::$FURRET !== null) {
            return self::$FURRET;
        }

        return self::$FURRET = new self('FURRET', self::FURRET_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HOOTHOOT()
    {
        if (self::$HOOTHOOT !== null) {
            return self::$HOOTHOOT;
        }

        return self::$HOOTHOOT = new self('HOOTHOOT', self::HOOTHOOT_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function NOCTOWL()
    {
        if (self::$NOCTOWL !== null) {
            return self::$NOCTOWL;
        }

        return self::$NOCTOWL = new self('NOCTOWL', self::NOCTOWL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function LEDYBA()
    {
        if (self::$LEDYBA !== null) {
            return self::$LEDYBA;
        }

        return self::$LEDYBA = new self('LEDYBA', self::LEDYBA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function LEDIAN()
    {
        if (self::$LEDIAN !== null) {
            return self::$LEDIAN;
        }

        return self::$LEDIAN = new self('LEDIAN', self::LEDIAN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SPINARAK()
    {
        if (self::$SPINARAK !== null) {
            return self::$SPINARAK;
        }

        return self::$SPINARAK = new self('SPINARAK', self::SPINARAK_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ARIADOS()
    {
        if (self::$ARIADOS !== null) {
            return self::$ARIADOS;
        }

        return self::$ARIADOS = new self('ARIADOS', self::ARIADOS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CROBAT()
    {
        if (self::$CROBAT !== null) {
            return self::$CROBAT;
        }

        return self::$CROBAT = new self('CROBAT', self::CROBAT_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CHINCHOU()
    {
        if (self::$CHINCHOU !== null) {
            return self::$CHINCHOU;
        }

        return self::$CHINCHOU = new self('CHINCHOU', self::CHINCHOU_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function LANTURN()
    {
        if (self::$LANTURN !== null) {
            return self::$LANTURN;
        }

        return self::$LANTURN = new self('LANTURN', self::LANTURN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PICHU()
    {
        if (self::$PICHU !== null) {
            return self::$PICHU;
        }

        return self::$PICHU = new self('PICHU', self::PICHU_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CLEFFA()
    {
        if (self::$CLEFFA !== null) {
            return self::$CLEFFA;
        }

        return self::$CLEFFA = new self('CLEFFA', self::CLEFFA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function IGGLYBUFF()
    {
        if (self::$IGGLYBUFF !== null) {
            return self::$IGGLYBUFF;
        }

        return self::$IGGLYBUFF = new self('IGGLYBUFF', self::IGGLYBUFF_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TOGEPI()
    {
        if (self::$TOGEPI !== null) {
            return self::$TOGEPI;
        }

        return self::$TOGEPI = new self('TOGEPI', self::TOGEPI_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TOGETIC()
    {
        if (self::$TOGETIC !== null) {
            return self::$TOGETIC;
        }

        return self::$TOGETIC = new self('TOGETIC', self::TOGETIC_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function NATU()
    {
        if (self::$NATU !== null) {
            return self::$NATU;
        }

        return self::$NATU = new self('NATU', self::NATU_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function XATU()
    {
        if (self::$XATU !== null) {
            return self::$XATU;
        }

        return self::$XATU = new self('XATU', self::XATU_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MAREEP()
    {
        if (self::$MAREEP !== null) {
            return self::$MAREEP;
        }

        return self::$MAREEP = new self('MAREEP', self::MAREEP_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function FLAAFFY()
    {
        if (self::$FLAAFFY !== null) {
            return self::$FLAAFFY;
        }

        return self::$FLAAFFY = new self('FLAAFFY', self::FLAAFFY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function AMPHAROS()
    {
        if (self::$AMPHAROS !== null) {
            return self::$AMPHAROS;
        }

        return self::$AMPHAROS = new self('AMPHAROS', self::AMPHAROS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function BELLOSSOM()
    {
        if (self::$BELLOSSOM !== null) {
            return self::$BELLOSSOM;
        }

        return self::$BELLOSSOM = new self('BELLOSSOM', self::BELLOSSOM_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MARILL()
    {
        if (self::$MARILL !== null) {
            return self::$MARILL;
        }

        return self::$MARILL = new self('MARILL', self::MARILL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function AZUMARILL()
    {
        if (self::$AZUMARILL !== null) {
            return self::$AZUMARILL;
        }

        return self::$AZUMARILL = new self('AZUMARILL', self::AZUMARILL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SUDOWOODO()
    {
        if (self::$SUDOWOODO !== null) {
            return self::$SUDOWOODO;
        }

        return self::$SUDOWOODO = new self('SUDOWOODO', self::SUDOWOODO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function POLITOED()
    {
        if (self::$POLITOED !== null) {
            return self::$POLITOED;
        }

        return self::$POLITOED = new self('POLITOED', self::POLITOED_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HOPPIP()
    {
        if (self::$HOPPIP !== null) {
            return self::$HOPPIP;
        }

        return self::$HOPPIP = new self('HOPPIP', self::HOPPIP_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SKIPLOOM()
    {
        if (self::$SKIPLOOM !== null) {
            return self::$SKIPLOOM;
        }

        return self::$SKIPLOOM = new self('SKIPLOOM', self::SKIPLOOM_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function JUMPLUFF()
    {
        if (self::$JUMPLUFF !== null) {
            return self::$JUMPLUFF;
        }

        return self::$JUMPLUFF = new self('JUMPLUFF', self::JUMPLUFF_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function AIPOM()
    {
        if (self::$AIPOM !== null) {
            return self::$AIPOM;
        }

        return self::$AIPOM = new self('AIPOM', self::AIPOM_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SUNKERN()
    {
        if (self::$SUNKERN !== null) {
            return self::$SUNKERN;
        }

        return self::$SUNKERN = new self('SUNKERN', self::SUNKERN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SUNFLORA()
    {
        if (self::$SUNFLORA !== null) {
            return self::$SUNFLORA;
        }

        return self::$SUNFLORA = new self('SUNFLORA', self::SUNFLORA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function YANMA()
    {
        if (self::$YANMA !== null) {
            return self::$YANMA;
        }

        return self::$YANMA = new self('YANMA', self::YANMA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function WOOPER()
    {
        if (self::$WOOPER !== null) {
            return self::$WOOPER;
        }

        return self::$WOOPER = new self('WOOPER', self::WOOPER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function QUAGSIRE()
    {
        if (self::$QUAGSIRE !== null) {
            return self::$QUAGSIRE;
        }

        return self::$QUAGSIRE = new self('QUAGSIRE', self::QUAGSIRE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ESPEON()
    {
        if (self::$ESPEON !== null) {
            return self::$ESPEON;
        }

        return self::$ESPEON = new self('ESPEON', self::ESPEON_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function UMBREON()
    {
        if (self::$UMBREON !== null) {
            return self::$UMBREON;
        }

        return self::$UMBREON = new self('UMBREON', self::UMBREON_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MURKROW()
    {
        if (self::$MURKROW !== null) {
            return self::$MURKROW;
        }

        return self::$MURKROW = new self('MURKROW', self::MURKROW_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SLOWKING()
    {
        if (self::$SLOWKING !== null) {
            return self::$SLOWKING;
        }

        return self::$SLOWKING = new self('SLOWKING', self::SLOWKING_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MISDREAVUS()
    {
        if (self::$MISDREAVUS !== null) {
            return self::$MISDREAVUS;
        }

        return self::$MISDREAVUS = new self('MISDREAVUS', self::MISDREAVUS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function UNOWN()
    {
        if (self::$UNOWN !== null) {
            return self::$UNOWN;
        }

        return self::$UNOWN = new self('UNOWN', self::UNOWN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function WOBBUFFET()
    {
        if (self::$WOBBUFFET !== null) {
            return self::$WOBBUFFET;
        }

        return self::$WOBBUFFET = new self('WOBBUFFET', self::WOBBUFFET_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GIRAFARIG()
    {
        if (self::$GIRAFARIG !== null) {
            return self::$GIRAFARIG;
        }

        return self::$GIRAFARIG = new self('GIRAFARIG', self::GIRAFARIG_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PINECO()
    {
        if (self::$PINECO !== null) {
            return self::$PINECO;
        }

        return self::$PINECO = new self('PINECO', self::PINECO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function FORRETRESS()
    {
        if (self::$FORRETRESS !== null) {
            return self::$FORRETRESS;
        }

        return self::$FORRETRESS = new self('FORRETRESS', self::FORRETRESS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DUNSPARCE()
    {
        if (self::$DUNSPARCE !== null) {
            return self::$DUNSPARCE;
        }

        return self::$DUNSPARCE = new self('DUNSPARCE', self::DUNSPARCE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GLIGAR()
    {
        if (self::$GLIGAR !== null) {
            return self::$GLIGAR;
        }

        return self::$GLIGAR = new self('GLIGAR', self::GLIGAR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function STEELIX()
    {
        if (self::$STEELIX !== null) {
            return self::$STEELIX;
        }

        return self::$STEELIX = new self('STEELIX', self::STEELIX_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SNUBBULL()
    {
        if (self::$SNUBBULL !== null) {
            return self::$SNUBBULL;
        }

        return self::$SNUBBULL = new self('SNUBBULL', self::SNUBBULL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function GRANBULL()
    {
        if (self::$GRANBULL !== null) {
            return self::$GRANBULL;
        }

        return self::$GRANBULL = new self('GRANBULL', self::GRANBULL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function QWILFISH()
    {
        if (self::$QWILFISH !== null) {
            return self::$QWILFISH;
        }

        return self::$QWILFISH = new self('QWILFISH', self::QWILFISH_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SCIZOR()
    {
        if (self::$SCIZOR !== null) {
            return self::$SCIZOR;
        }

        return self::$SCIZOR = new self('SCIZOR', self::SCIZOR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SHUCKLE()
    {
        if (self::$SHUCKLE !== null) {
            return self::$SHUCKLE;
        }

        return self::$SHUCKLE = new self('SHUCKLE', self::SHUCKLE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HERACROSS()
    {
        if (self::$HERACROSS !== null) {
            return self::$HERACROSS;
        }

        return self::$HERACROSS = new self('HERACROSS', self::HERACROSS_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SNEASEL()
    {
        if (self::$SNEASEL !== null) {
            return self::$SNEASEL;
        }

        return self::$SNEASEL = new self('SNEASEL', self::SNEASEL_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TEDDIURSA()
    {
        if (self::$TEDDIURSA !== null) {
            return self::$TEDDIURSA;
        }

        return self::$TEDDIURSA = new self('TEDDIURSA', self::TEDDIURSA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function URSARING()
    {
        if (self::$URSARING !== null) {
            return self::$URSARING;
        }

        return self::$URSARING = new self('URSARING', self::URSARING_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SLUGMA()
    {
        if (self::$SLUGMA !== null) {
            return self::$SLUGMA;
        }

        return self::$SLUGMA = new self('SLUGMA', self::SLUGMA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MAGCARGO()
    {
        if (self::$MAGCARGO !== null) {
            return self::$MAGCARGO;
        }

        return self::$MAGCARGO = new self('MAGCARGO', self::MAGCARGO_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SWINUB()
    {
        if (self::$SWINUB !== null) {
            return self::$SWINUB;
        }

        return self::$SWINUB = new self('SWINUB', self::SWINUB_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PILOSWINE()
    {
        if (self::$PILOSWINE !== null) {
            return self::$PILOSWINE;
        }

        return self::$PILOSWINE = new self('PILOSWINE', self::PILOSWINE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CORSOLA()
    {
        if (self::$CORSOLA !== null) {
            return self::$CORSOLA;
        }

        return self::$CORSOLA = new self('CORSOLA', self::CORSOLA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function REMORAID()
    {
        if (self::$REMORAID !== null) {
            return self::$REMORAID;
        }

        return self::$REMORAID = new self('REMORAID', self::REMORAID_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function OCTILLERY()
    {
        if (self::$OCTILLERY !== null) {
            return self::$OCTILLERY;
        }

        return self::$OCTILLERY = new self('OCTILLERY', self::OCTILLERY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DELIBIRD()
    {
        if (self::$DELIBIRD !== null) {
            return self::$DELIBIRD;
        }

        return self::$DELIBIRD = new self('DELIBIRD', self::DELIBIRD_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MANTINE()
    {
        if (self::$MANTINE !== null) {
            return self::$MANTINE;
        }

        return self::$MANTINE = new self('MANTINE', self::MANTINE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SKARMORY()
    {
        if (self::$SKARMORY !== null) {
            return self::$SKARMORY;
        }

        return self::$SKARMORY = new self('SKARMORY', self::SKARMORY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HOUNDOUR()
    {
        if (self::$HOUNDOUR !== null) {
            return self::$HOUNDOUR;
        }

        return self::$HOUNDOUR = new self('HOUNDOUR', self::HOUNDOUR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HOUNDOOM()
    {
        if (self::$HOUNDOOM !== null) {
            return self::$HOUNDOOM;
        }

        return self::$HOUNDOOM = new self('HOUNDOOM', self::HOUNDOOM_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function KINGDRA()
    {
        if (self::$KINGDRA !== null) {
            return self::$KINGDRA;
        }

        return self::$KINGDRA = new self('KINGDRA', self::KINGDRA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PHANPY()
    {
        if (self::$PHANPY !== null) {
            return self::$PHANPY;
        }

        return self::$PHANPY = new self('PHANPY', self::PHANPY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function DONPHAN()
    {
        if (self::$DONPHAN !== null) {
            return self::$DONPHAN;
        }

        return self::$DONPHAN = new self('DONPHAN', self::DONPHAN_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PORYGON2()
    {
        if (self::$PORYGON2 !== null) {
            return self::$PORYGON2;
        }

        return self::$PORYGON2 = new self('PORYGON2', self::PORYGON2_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function STANTLER()
    {
        if (self::$STANTLER !== null) {
            return self::$STANTLER;
        }

        return self::$STANTLER = new self('STANTLER', self::STANTLER_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SMEARGLE()
    {
        if (self::$SMEARGLE !== null) {
            return self::$SMEARGLE;
        }

        return self::$SMEARGLE = new self('SMEARGLE', self::SMEARGLE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TYROGUE()
    {
        if (self::$TYROGUE !== null) {
            return self::$TYROGUE;
        }

        return self::$TYROGUE = new self('TYROGUE', self::TYROGUE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HITMONTOP()
    {
        if (self::$HITMONTOP !== null) {
            return self::$HITMONTOP;
        }

        return self::$HITMONTOP = new self('HITMONTOP', self::HITMONTOP_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SMOOCHUM()
    {
        if (self::$SMOOCHUM !== null) {
            return self::$SMOOCHUM;
        }

        return self::$SMOOCHUM = new self('SMOOCHUM', self::SMOOCHUM_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ELEKID()
    {
        if (self::$ELEKID !== null) {
            return self::$ELEKID;
        }

        return self::$ELEKID = new self('ELEKID', self::ELEKID_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MAGBY()
    {
        if (self::$MAGBY !== null) {
            return self::$MAGBY;
        }

        return self::$MAGBY = new self('MAGBY', self::MAGBY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function MILTANK()
    {
        if (self::$MILTANK !== null) {
            return self::$MILTANK;
        }

        return self::$MILTANK = new self('MILTANK', self::MILTANK_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function BLISSEY()
    {
        if (self::$BLISSEY !== null) {
            return self::$BLISSEY;
        }

        return self::$BLISSEY = new self('BLISSEY', self::BLISSEY_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function RAIKOU()
    {
        if (self::$RAIKOU !== null) {
            return self::$RAIKOU;
        }

        return self::$RAIKOU = new self('RAIKOU', self::RAIKOU_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function ENTEI()
    {
        if (self::$ENTEI !== null) {
            return self::$ENTEI;
        }

        return self::$ENTEI = new self('ENTEI', self::ENTEI_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function SUICUNE()
    {
        if (self::$SUICUNE !== null) {
            return self::$SUICUNE;
        }

        return self::$SUICUNE = new self('SUICUNE', self::SUICUNE_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function LARVITAR()
    {
        if (self::$LARVITAR !== null) {
            return self::$LARVITAR;
        }

        return self::$LARVITAR = new self('LARVITAR', self::LARVITAR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function PUPITAR()
    {
        if (self::$PUPITAR !== null) {
            return self::$PUPITAR;
        }

        return self::$PUPITAR = new self('PUPITAR', self::PUPITAR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function TYRANITAR()
    {
        if (self::$TYRANITAR !== null) {
            return self::$TYRANITAR;
        }

        return self::$TYRANITAR = new self('TYRANITAR', self::TYRANITAR_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function LUGIA()
    {
        if (self::$LUGIA !== null) {
            return self::$LUGIA;
        }

        return self::$LUGIA = new self('LUGIA', self::LUGIA_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function HO_OH()
    {
        if (self::$HO_OH !== null) {
            return self::$HO_OH;
        }

        return self::$HO_OH = new self('HO_OH', self::HO_OH_VALUE);
    }

    /**
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function CELEBI()
    {
        if (self::$CELEBI !== null) {
            return self::$CELEBI;
        }

        return self::$CELEBI = new self('CELEBI', self::CELEBI_VALUE);
    }

    /**
     * @param int $value
     * @return \POGOProtos\Enums\PokemonId
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::MISSINGNO();
            case 1: return self::BULBASAUR();
            case 2: return self::IVYSAUR();
            case 3: return self::VENUSAUR();
            case 4: return self::CHARMANDER();
            case 5: return self::CHARMELEON();
            case 6: return self::CHARIZARD();
            case 7: return self::SQUIRTLE();
            case 8: return self::WARTORTLE();
            case 9: return self::BLASTOISE();
            case 10: return self::CATERPIE();
            case 11: return self::METAPOD();
            case 12: return self::BUTTERFREE();
            case 13: return self::WEEDLE();
            case 14: return self::KAKUNA();
            case 15: return self::BEEDRILL();
            case 16: return self::PIDGEY();
            case 17: return self::PIDGEOTTO();
            case 18: return self::PIDGEOT();
            case 19: return self::RATTATA();
            case 20: return self::RATICATE();
            case 21: return self::SPEAROW();
            case 22: return self::FEAROW();
            case 23: return self::EKANS();
            case 24: return self::ARBOK();
            case 25: return self::PIKACHU();
            case 26: return self::RAICHU();
            case 27: return self::SANDSHREW();
            case 28: return self::SANDSLASH();
            case 29: return self::NIDORAN_FEMALE();
            case 30: return self::NIDORINA();
            case 31: return self::NIDOQUEEN();
            case 32: return self::NIDORAN_MALE();
            case 33: return self::NIDORINO();
            case 34: return self::NIDOKING();
            case 35: return self::CLEFAIRY();
            case 36: return self::CLEFABLE();
            case 37: return self::VULPIX();
            case 38: return self::NINETALES();
            case 39: return self::JIGGLYPUFF();
            case 40: return self::WIGGLYTUFF();
            case 41: return self::ZUBAT();
            case 42: return self::GOLBAT();
            case 43: return self::ODDISH();
            case 44: return self::GLOOM();
            case 45: return self::VILEPLUME();
            case 46: return self::PARAS();
            case 47: return self::PARASECT();
            case 48: return self::VENONAT();
            case 49: return self::VENOMOTH();
            case 50: return self::DIGLETT();
            case 51: return self::DUGTRIO();
            case 52: return self::MEOWTH();
            case 53: return self::PERSIAN();
            case 54: return self::PSYDUCK();
            case 55: return self::GOLDUCK();
            case 56: return self::MANKEY();
            case 57: return self::PRIMEAPE();
            case 58: return self::GROWLITHE();
            case 59: return self::ARCANINE();
            case 60: return self::POLIWAG();
            case 61: return self::POLIWHIRL();
            case 62: return self::POLIWRATH();
            case 63: return self::ABRA();
            case 64: return self::KADABRA();
            case 65: return self::ALAKAZAM();
            case 66: return self::MACHOP();
            case 67: return self::MACHOKE();
            case 68: return self::MACHAMP();
            case 69: return self::BELLSPROUT();
            case 70: return self::WEEPINBELL();
            case 71: return self::VICTREEBEL();
            case 72: return self::TENTACOOL();
            case 73: return self::TENTACRUEL();
            case 74: return self::GEODUDE();
            case 75: return self::GRAVELER();
            case 76: return self::GOLEM();
            case 77: return self::PONYTA();
            case 78: return self::RAPIDASH();
            case 79: return self::SLOWPOKE();
            case 80: return self::SLOWBRO();
            case 81: return self::MAGNEMITE();
            case 82: return self::MAGNETON();
            case 83: return self::FARFETCHD();
            case 84: return self::DODUO();
            case 85: return self::DODRIO();
            case 86: return self::SEEL();
            case 87: return self::DEWGONG();
            case 88: return self::GRIMER();
            case 89: return self::MUK();
            case 90: return self::SHELLDER();
            case 91: return self::CLOYSTER();
            case 92: return self::GASTLY();
            case 93: return self::HAUNTER();
            case 94: return self::GENGAR();
            case 95: return self::ONIX();
            case 96: return self::DROWZEE();
            case 97: return self::HYPNO();
            case 98: return self::KRABBY();
            case 99: return self::KINGLER();
            case 100: return self::VOLTORB();
            case 101: return self::ELECTRODE();
            case 102: return self::EXEGGCUTE();
            case 103: return self::EXEGGUTOR();
            case 104: return self::CUBONE();
            case 105: return self::MAROWAK();
            case 106: return self::HITMONLEE();
            case 107: return self::HITMONCHAN();
            case 108: return self::LICKITUNG();
            case 109: return self::KOFFING();
            case 110: return self::WEEZING();
            case 111: return self::RHYHORN();
            case 112: return self::RHYDON();
            case 113: return self::CHANSEY();
            case 114: return self::TANGELA();
            case 115: return self::KANGASKHAN();
            case 116: return self::HORSEA();
            case 117: return self::SEADRA();
            case 118: return self::GOLDEEN();
            case 119: return self::SEAKING();
            case 120: return self::STARYU();
            case 121: return self::STARMIE();
            case 122: return self::MR_MIME();
            case 123: return self::SCYTHER();
            case 124: return self::JYNX();
            case 125: return self::ELECTABUZZ();
            case 126: return self::MAGMAR();
            case 127: return self::PINSIR();
            case 128: return self::TAUROS();
            case 129: return self::MAGIKARP();
            case 130: return self::GYARADOS();
            case 131: return self::LAPRAS();
            case 132: return self::DITTO();
            case 133: return self::EEVEE();
            case 134: return self::VAPOREON();
            case 135: return self::JOLTEON();
            case 136: return self::FLAREON();
            case 137: return self::PORYGON();
            case 138: return self::OMANYTE();
            case 139: return self::OMASTAR();
            case 140: return self::KABUTO();
            case 141: return self::KABUTOPS();
            case 142: return self::AERODACTYL();
            case 143: return self::SNORLAX();
            case 144: return self::ARTICUNO();
            case 145: return self::ZAPDOS();
            case 146: return self::MOLTRES();
            case 147: return self::DRATINI();
            case 148: return self::DRAGONAIR();
            case 149: return self::DRAGONITE();
            case 150: return self::MEWTWO();
            case 151: return self::MEW();
            case 152: return self::CHIKORITA();
            case 153: return self::BAYLEEF();
            case 154: return self::MEGANIUM();
            case 155: return self::CYNDAQUIL();
            case 156: return self::QUILAVA();
            case 157: return self::TYPHLOSION();
            case 158: return self::TOTODILE();
            case 159: return self::CROCONAW();
            case 160: return self::FERALIGATR();
            case 161: return self::SENTRET();
            case 162: return self::FURRET();
            case 163: return self::HOOTHOOT();
            case 164: return self::NOCTOWL();
            case 165: return self::LEDYBA();
            case 166: return self::LEDIAN();
            case 167: return self::SPINARAK();
            case 168: return self::ARIADOS();
            case 169: return self::CROBAT();
            case 170: return self::CHINCHOU();
            case 171: return self::LANTURN();
            case 172: return self::PICHU();
            case 173: return self::CLEFFA();
            case 174: return self::IGGLYBUFF();
            case 175: return self::TOGEPI();
            case 176: return self::TOGETIC();
            case 177: return self::NATU();
            case 178: return self::XATU();
            case 179: return self::MAREEP();
            case 180: return self::FLAAFFY();
            case 181: return self::AMPHAROS();
            case 182: return self::BELLOSSOM();
            case 183: return self::MARILL();
            case 184: return self::AZUMARILL();
            case 185: return self::SUDOWOODO();
            case 186: return self::POLITOED();
            case 187: return self::HOPPIP();
            case 188: return self::SKIPLOOM();
            case 189: return self::JUMPLUFF();
            case 190: return self::AIPOM();
            case 191: return self::SUNKERN();
            case 192: return self::SUNFLORA();
            case 193: return self::YANMA();
            case 194: return self::WOOPER();
            case 195: return self::QUAGSIRE();
            case 196: return self::ESPEON();
            case 197: return self::UMBREON();
            case 198: return self::MURKROW();
            case 199: return self::SLOWKING();
            case 200: return self::MISDREAVUS();
            case 201: return self::UNOWN();
            case 202: return self::WOBBUFFET();
            case 203: return self::GIRAFARIG();
            case 204: return self::PINECO();
            case 205: return self::FORRETRESS();
            case 206: return self::DUNSPARCE();
            case 207: return self::GLIGAR();
            case 208: return self::STEELIX();
            case 209: return self::SNUBBULL();
            case 210: return self::GRANBULL();
            case 211: return self::QWILFISH();
            case 212: return self::SCIZOR();
            case 213: return self::SHUCKLE();
            case 214: return self::HERACROSS();
            case 215: return self::SNEASEL();
            case 216: return self::TEDDIURSA();
            case 217: return self::URSARING();
            case 218: return self::SLUGMA();
            case 219: return self::MAGCARGO();
            case 220: return self::SWINUB();
            case 221: return self::PILOSWINE();
            case 222: return self::CORSOLA();
            case 223: return self::REMORAID();
            case 224: return self::OCTILLERY();
            case 225: return self::DELIBIRD();
            case 226: return self::MANTINE();
            case 227: return self::SKARMORY();
            case 228: return self::HOUNDOUR();
            case 229: return self::HOUNDOOM();
            case 230: return self::KINGDRA();
            case 231: return self::PHANPY();
            case 232: return self::DONPHAN();
            case 233: return self::PORYGON2();
            case 234: return self::STANTLER();
            case 235: return self::SMEARGLE();
            case 236: return self::TYROGUE();
            case 237: return self::HITMONTOP();
            case 238: return self::SMOOCHUM();
            case 239: return self::ELEKID();
            case 240: return self::MAGBY();
            case 241: return self::MILTANK();
            case 242: return self::BLISSEY();
            case 243: return self::RAIKOU();
            case 244: return self::ENTEI();
            case 245: return self::SUICUNE();
            case 246: return self::LARVITAR();
            case 247: return self::PUPITAR();
            case 248: return self::TYRANITAR();
            case 249: return self::LUGIA();
            case 250: return self::HO_OH();
            case 251: return self::CELEBI();
            default: return null;
        }
    }


}

